#!/usr/bin/env bash


# Prepopulates a git repo out of the rendered template with an initial commit+tag
create_git_repository() {
    # if [ $# -lt 2 ]; then
    #     echo "Usage: create_git_repository USER_NAME USER_EMAIL"
    #     echo $?
    #     exit 1
    # fi
    # AUTHOR_NAME=$1
    # AUTHOR_EMAIL=$2

    if [[ ! -d ".git/" ]];
    then
        # No git repo exists
        echo "Creating a git repo..."
        git init --initial-branch main
    else
        echo "Repo already exists..."
        # Check if any untracked files, continuing init if so
        git ls-files --others | grep -q '^$'
        if [ $? -ne 0 ];
        then
            echo "But untracked git changes detected: Continuing repo init"
        else
            # No untracked files: repo would be well-inited: exit
            echo "No files untracked: Exiting repo initialization"
            exit 0  # No action, exit early
        fi
    fi
    # Temporarily set commiter name.
    # Nicely solves problem of "missing git user" in CI by making all
    # template instantiation use a set user name/email combo
    git config --get user.name > /dev/null || git config --local user.name "${AUTHOR_NAME}"
    git config --get user.email > /dev/null || git config --local user.email "${AUTHOR_EMAIL}"

    # Commit
    git add --all
    git commit \
        --message "Initial commit from 'copier' template"
    git tag v0.1.0 \
        --annotate \
        --message "First releasable artefact, from template"

    # Reset the user config after committing if fallback values were used
    git config --unset user.name || true
    git config --unset user.email || true
}


create_git_repository
