#!/usr/bin/env bash

# Prepopulates a git repo out of the rendered template with an initial commit+tag
create_git_repository() {
    echo "Creating a git repo..."
    # If a git repo is already in place
    if [[ -d ".git/" ]];
    then
        exit 0  # No action, exit early
    fi

    # First create empty git repo
    git init --initial-branch main

    # Temporarily set commiter name.
    # Nicely solves problem of "missing git user" in CI by making all
    # template instantiation use a set user name/email combo
    git config --get user.name > /dev/null || git config --local user.name "Jb Doyon"
    git config --get user.email > /dev/null || git config --local user.email "jb@jiby.tech"

    # Commit
    git add --all
    git commit \
        --message "Initial commit from cookiecutter template" \
        --message "From python-template repository in Github:" \
        --message "https://github.com/OverkillGuy/python-template" \
        --message "at commit {% gitcommit %}"
    git tag v0.1.0 \
        --annotate \
        --message "First releasable artefact, from template"

    # Reset the user config after committing if fallback values were used
    git config --unset user.name || true
    git config --unset user.email || true
}

# Delete all unused files (marked via specific content string)
# Such as api.py in non-api projects.
# Workaround for cookiecutter limitation (cannot conditionally include files)
delete_unused_files() {
    echo "Deleting unused files..."
    DELETION_MARKER="DELETE THIS FILE DURING POST_GEN HOOK"
    # Compute the string's SHA256 digest
    MARKER_SHA256=$(echo "${DELETION_MARKER}" | sha256sum | cut -d' ' -f1)
    # echo "Marker SHA256sum = ${MARKER_SHA256}"
    # Compute all files checksum
    ALL_FILES_SHA256=$(find . -type f -exec sha256sum {} \;)
    # Look for matching content digest
    MARKED_FILES=$(echo "${ALL_FILES_SHA256}" | awk "\$1 == \"${MARKER_SHA256}\" {print \$NF}")
    # echo "Unused files to delete: ${MARKED_FILES}"
    echo "${MARKED_FILES}" | xargs -I % rm %
}

delete_unused_files
create_git_repository
